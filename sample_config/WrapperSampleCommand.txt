#This is Wrapper.ps1 command text sample for executing FileMaintenance.ps1

#You can specify character code of command text in UTF or ShiftJIS or other code.
#ShiftJIS is default
#If you want to specify, with -CommandFileEncode option.
# .\Wrapper.ps1 -CommandFileEncode UTF8

#Command file format.
#
#skip the empty lines.
#starting with '#', the line is interprited as comment.

#How to specify -TargetFolder , -MoveToFolder

#If path includes space, quote with single quote'

-TargetFolder '.\TEST\C C\'


#If path include quote' characters, quote with double quote"

-TargetFolder ".\TEST\D' 'D\"

#F.Y.I. double quote" is not allowed in NTFS path name.


#If path include bracket[], write path literally. Bracket[] are not treated as wild cards.
#It is not necessary to quote with quote'

-TargetFolder .\TEST\[LOG]

#If specify path with characters not allowed in NTFS(include wild card * ?),
#terminate with Error.
#If you want to specify the path like wild card, specify -ParentRegularExpression

#Do not use
-TargetFolder .\TEST\Log*\

#Do
-TargetFolder .\TEST\ -ParenteRegularExpression '\\Log.*\\'


#relative and absolute path format

#Wrapper.ps1 and FileMaintenace.ps1 accept relative and absolute path format.
#Relative path format dose not base current path, base on the path script placed.
#Relative path start with dot.

-TargetFolder ..\Log1
-TargetFolder .\Log2

# D:\TEST\infra\Shell\Wrapper.ps1
# D:\TEST\infra\Shell\FileMaintenance.ps1
# D:\TEST\infra\Log1
# D:\TEST\infra\Shell\Log2


#How to specify -RegularExpression  -ParentRegularExpression

#If file/folder name include bracket[] in the path, bracket[] needs to be escaped with backslash\
#Log[1].txt , Log[2].txt ... Log[5].txt are matched in the sample.

-TargetFolder D:\TEST -RegularExpression '^Log\[[1-5]\]\.txt$'


# D:\TEST\Log[0].txt
# D:\TEST\Log[1].txt
# D:\TEST\Log[2].txt
#      :
#      :
# D:\TEST\Log[5].txt
# D:\TEST\Log[6].txt


#If you specify arugument with wild card and regular expression, wild cards do not work.
#"Log[*].txt" will be matched to the files in the folder, but wild card* dose not work and work literally.
#NTFS do not allow file name including asterisk*, thus nothing is matched.

-TargetFolder D:\TEST -RegularExpression '^Log\[\*\]\.txt$'

# D:\TEST\Log[0].txt
# D:\TEST\Log[1].txt
# D:\TEST\Log[2].txt
#      :
#      :
# D:\TEST\Log[5].txt
# D:\TEST\Log[6].txt


#-ParentRegularExpression option match only directory, not file name.
#Only paths including \OLD\ are candidated for -RegularExpression matching.
#It is useful for enviroments that have differnt directory names like 'production' and 'development'
#But many objects will be scaned, specify carefully.


-TargetFolder D:\TEST -ParentRegularExpression '\\OLD\\'


# D:\TEST\APP\Current\log.log
# D:\TEST\APP\OLD\log.log
# D:\TEST\BATCH\Current\log.log
# D:\TEST\BATCH\OLD\log.log
